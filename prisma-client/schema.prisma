// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl"]
  output        = "../prisma-client"
}

generator zod {
  provider = "prisma-zod-generator"
  output   = "../zod-schemas"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Role {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  users       String
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
}

model Review {
  id          String   @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  reviewers   String
  categoryId  Int
  revieweeId  String
  projectId   String
}

model Questionnaire {
  id           String        @id @default(uuid())
  title        String
  description  String?
  questionSets QuestionSet[]
  createdAt    DateTime      @default(now())
}

model QuestionSet {
  id          String  @id @default(uuid())
  title       String
  description String?

  questionnaireId String
  questionnaire   Questionnaire   @relation(fields: [questionnaireId], references: [id])
  questionScores  QuestionScore[]
}

model Question {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  createdBy String
}

model QuestionScore {
  id            String      @id @default(uuid())
  score         Int
  weight        Float // Adjusts the impact of the score
  questionId    String
  questionSetId String
  reviewId      String
  questionSet   QuestionSet @relation(fields: [questionSetId], references: [id])
}
